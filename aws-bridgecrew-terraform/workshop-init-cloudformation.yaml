AWSTemplateFormatVersion: 2010-09-09
Parameters:
  UserBridgecrewAPI:
    Type: String
    Default: "" 
    Description: Enter your Bridgecrew Cloud API key.
  TFCUserToken:
    Type: String
    Default: "" 
    Description: Your Terraform Cloud user token.
  GHPat:
    Type: String
    Default: "" 
    Description: Your github Personal Access Token (PAT).   
  KustomizeForkURL:
    Type: String
    Default: "https://github.com/<YOUR_GIT_USERNAME>/kustomizegoat.git" 
    Description: Enter your 'git clone' HTTPS address for your KustomizeGoat fork.
  AWSRoleID:
    Type: String
    Default: "TeamRole"
    Description: The Role your User assumes.
  AWSAssumedUser:
    Type: String
    Default: "MasterKey" 
    Description: Your Role assumed instance ID
Resources:
  WorkshopEC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: demo-ec2-instance-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: allow-cloud9-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "cloud9:CreateEnvironmentSSH"
                  - "cloud9:CreateEnvironmentToken"
                  - "cloud9:DescribeEnvironments"
                  - "cloud9:DescribeSSHRemote"
                  - "cloud9:GetUserPublicKey"
                  - "cloud9:ListEnvironments"
                  - "cloud9:ValidateEnvironmentName"
                  - "cloud9:CreateEnvironmentMembership"
                Resource: '*'
        - PolicyName: allow-edit-sg
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "ec2:DescribeSecurityGroupReferences"
                  - "ec2:DescribeSecurityGroupRules"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:ModifySecurityGroupRules"
                Resource: "*"
      Path: /
  WorkshopBaseDebugKeyPair:    
    Type: AWS::EC2::KeyPair
    Properties: 
      KeyName: workshop-base-keypair
      KeyType: rsa
      PublicKeyMaterial: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCjJzEo6HDD+dvvDId++VIynPBNspYSebF9aoYTUzoX0ge0w9MkLDCis4/SAQlGViNBOamPvIlP/ATGIDRQRS/S+l+YdILb0Q5vIKeE7tyKlMjROOpJWm9f+nj5uSR7WyoFLLy8QHcrG3xc1YPRvk0UQsNH0eDrJWt47vzu2mXLX4vpffTy+8WBr/fSOo532OQCloApziQ/SPFLE9j191z4i4HN98sO80/be15HfnN8p4WxSCUQ2iZfo0oMTOjI+CH//yTdC+eBa39bLO12XADxpcKeNWCj3j8FfuiuTzMT5TEO3K7sJIXpi2rKywMC0FWvMWB7Jo+aCVti+HX2WlThptDzeTJCcOWdzie5/zLU60sCdx5Ksn1w5lpjGOoS5vkeRKJk1GBJFzAvdXhC9DdEWy4J3PTnprpdcIRVJ3ZEdbbEZli5Yex4Mwt2tR1PgnxwnSP5wnyeNNbO7yWzH9Y1uXzY5x6cojZKfTypQ8ocYh0oTtEvyTmZnRGM1j8rGTE= matt@M-C02D83M3MD6R
  WorkshopEc2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: workshop-ec2-instance-profile
      Path: /
      Roles: 
       - !Ref WorkshopEC2InstanceRole
  KindEC2SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WorkshopVPC
      GroupDescription: Access for KIND Workshop host
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 32443
          IpProtocol: tcp
          ToPort: 32443
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 32080
          IpProtocol: tcp
          ToPort: 32080
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42001
          IpProtocol: tcp
          ToPort: 42001
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42002
          IpProtocol: tcp
          ToPort: 42002
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42003
          IpProtocol: tcp
          ToPort: 42003
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42004
          IpProtocol: tcp
          ToPort: 42004
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42005
          IpProtocol: tcp
          ToPort: 42005
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42006
          IpProtocol: tcp
          ToPort: 42006
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42007
          IpProtocol: tcp
          ToPort: 42007
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42008
          IpProtocol: tcp
          ToPort: 42008
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42009
          IpProtocol: tcp
          ToPort: 42009
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/24'
          FromPort: 42010
          IpProtocol: tcp
          ToPort: 42010
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
    DependsOn:
      - WorkshopVPC
      - WorkshopVPCInternetGW
      - WorkshopSubnet
      - EC2R1ZK3C
  KindEC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: workshop-base-keypair
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -xe
            git clone https://github.com/metahertz/kubernetes-devsecops-workshop.git
            AWS_ACCOUNT_ID=${account_id}
            sudo python3 ./kubernetes-devsecops-workshop/aws-bridgecrew-terraform/cloud9-ssh-create-env.py $AWS_ACCOUNT_ID ${AWSRoleID} ${AWSAssumedUser}
            sudo chmod +x ./kubernetes-devsecops-workshop/aws-bridgecrew-terraform/*.sh
            sudo ./kubernetes-devsecops-workshop/aws-bridgecrew-terraform/base-setup.sh
            sudo ./kubernetes-devsecops-workshop/aws-bridgecrew-terraform/personalize.sh ${KustomizeForkURL} ${UserBridgecrewAPI} ${TFCUserToken} ${GHPat} 
          - account_id: !Ref "AWS::AccountId"
      InstanceType: t3.medium
      ImageId: ami-0c943b80df4b831ee
      IamInstanceProfile: !Ref WorkshopEc2InstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: '100'
            DeleteOnTermination: 'true'
            Encrypted: 'false'
      NetworkInterfaces:
        - DeviceIndex: '0'
          AssociatePublicIpAddress: 'true'
          GroupSet:
            - !Ref KindEC2SG
          SubnetId: !Ref WorkshopSubnet
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
        - Key: kind
          Value: yes
    DependsOn:
      - WorkshopVPCInternetGW
      - KindEC2SG
      - WorkshopSubnet
      - WorkshopBaseDebugKeyPair
  WorkshopVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: false
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
  WorkshopSubnet:
    Type: 'AWS::EC2::Subnet'
    DependsOn:
      - WorkshopVPC
    Properties:
      CidrBlock: 10.1.1.0/24
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
      VpcId: !Ref WorkshopVPC
  WorkshopVPCInternetGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
    DependsOn:
      - WorkshopVPC
  EC2R1ZK3C:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WorkshopVPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WorkshopVPCInternetGW
    DependsOn:
      - WorkshopVPCInternetGW
      - WorkshopVPCRouteTable
      - WorkshopVPCGatewayAttachment
  WorkshopVPCRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WorkshopVPC
    DependsOn:
      - WorkshopVPC
      - WorkshopVPCInternetGW
      - WorkshopVPCGatewayAttachment
  WorkshopVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref WorkshopVPCInternetGW
      VpcId: !Ref WorkshopVPC
    DependsOn:
      - WorkshopVPC
      - WorkshopVPCInternetGW
  WorkshopRouteTableSubnetAttachment:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WorkshopVPCRouteTable
      SubnetId: !Ref WorkshopSubnet
    DependsOn:
      - WorkshopVPCRouteTable
      - WorkshopSubnet
      - WorkshopVPCGatewayAttachment
Outputs:
  PublicIp:
    Description: Public IP address
    Value: !GetAtt KindEC2.PublicIp