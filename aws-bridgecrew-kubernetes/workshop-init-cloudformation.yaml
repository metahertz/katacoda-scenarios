AWSTemplateFormatVersion: 2010-09-09
Parameters:
  UserSSHKey:
    Type: String
    Default: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDNzN/MyVI8KSzQnVOAG7TMtzAvLUo9mtJjmH0XBjOJlPO0BBjeb/izKR9zBkvap/fW9GfmVmuec5Y8N+i4DHTWmtE3Q8eWSeEOhryoPo+a+1AWmm/p0kC4xczzOgrSNrdvs5POmZrd/QLEDPtPgWlq6ib94gSmw4dNafeX3Co/CdPpnBlwrw/gh/RMWHAS0nVKKGmiUiAGEUPPBRNYc6EG7/wabm3meC/TNZ2jmQPrTGodapd/7r3Z930HeVf3jqi0Bs0mKBtFm9WTOWWPMAqaUI+eegnQRHapHi6/uxisVWsJHxEiPmm628YPWm+UkR3hTWLTojVPN0TXAJCbChgx1T0obtXx/mJ8zYFmFahJiBjfL3GWvgl9oRiVFRAHXMgV47Z6AHs+ZMk+L1PmUq9F74Pvpr+RK0AZK2LxER6mrHVB0IKNrp44DTvy81WmXgp8WZ31OLY3T2C//kgi2XfjmHxRQlIt+FgPfnmBvqdafq3km78rCQsq6t63DzqsDjCrPbiue4mMhNuYy4wVSj7mAJG4OM+PZUs6NUzQUzUk+X0XdxQwsjmWtUEprLVo7aHeLqkvOMCRvF9BnWiEBDBju+/5i/2vK39485c2X4fnZPERugidxoJXg3u3sl5Y++2+RdnyLxHbD2WqSMJGn+3YsSJnr6GCCtBHOh3Y/9nqEQ== matt@MJ_NG_PERSONAL" 
    Description: Enter your SSH public key for workshop access.
  UserBridgecrewAPI:
    Type: String
    Default: "bac4246c-bc7d-4b0d-80f5-fb1b43677409" 
    Description: Enter your Bridgecrew Cloud API key.
  KustomizeForkURL:
    Type: String
    Default: "https://github.com/metahertz/kustomizegoat.git" 
    Description: Enter your 'git clone' HTTPS address for your KustomizeGoat fork.
  YourPublicIP:
    Type: String
    Default: "88.98.254.194" 
    Description: Enter your IPv4 Public IP to lock down Argo access for the workshop.
Resources:
  WorkshopEC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: demo-ec2-instance-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: allow-cloud9-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "cloud9:CreateEnvironmentSSH"
                  - "cloud9:CreateEnvironmentToken"
                  - "cloud9:DescribeEnvironments"
                  - "cloud9:DescribeSSHRemote"
                  - "cloud9:GetUserPublicKey"
                  - "cloud9:ListEnvironments"
                  - "cloud9:ValidateEnvironmentName"
                Resource: '*'
      Path: /
  WorkshopEc2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: workshop-ec2-instance-profile
      Path: /
      Roles: 
       - !Ref WorkshopEC2InstanceRole
  KindEC2SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WorkshopVPC
      GroupDescription: Access for KIND Workshop host
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/32'
          FromPort: 32443
          IpProtocol: tcp
          ToPort: 32443
        - CidrIp: 
            !Join
              - ''
              - - !Ref YourPublicIP
                - '/32'
          FromPort: 32080
          IpProtocol: tcp
          ToPort: 32080
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
    DependsOn:
      - WorkshopVPC
      - WorkshopVPCInternetGW
      - WorkshopSubnet
      - EC2R1ZK3C
  KindEC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: mj-ws-oregon-k8s-test
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            apt update
            apt install -y git docker.io awscli nodejs
            git clone https://github.com/metahertz/kubernetes-devsecops-workshop.git 
            sudo chmod +x ./kubernetes-devsecops-workshop/aws-bridgecrew-kubernetes/*.sh
            sudo ./kubernetes-devsecops-workshop/aws-bridgecrew-kubernetes/base-setup.sh
            sudo ./kubernetes-devsecops-workshop/aws-bridgecrew-kubernetes/personalize.sh ${KustomizeForkURL} ${UserBridgecrewAPI} "${UserSSHKey}"
            sudo mv ./kubernetes-devsecops-workshop ./.bcworkshop/.
      InstanceType: t3.medium
      ImageId: ami-0fb653ca2d3203ac1
      IamInstanceProfile: !Ref WorkshopEc2InstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: '100'
            DeleteOnTermination: 'true'
            Encrypted: 'false'
      NetworkInterfaces:
        - DeviceIndex: '0'
          AssociatePublicIpAddress: 'true'
          GroupSet:
            - !Ref KindEC2SG
          SubnetId: !Ref WorkshopSubnet
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
        - Key: kind
          Value: yes
    DependsOn:
      - WorkshopVPCInternetGW
      - KindEC2SG
      - WorkshopSubnet
  WorkshopVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: false
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
  WorkshopSubnet:
    Type: 'AWS::EC2::Subnet'
    DependsOn:
      - WorkshopVPC
    Properties:
      CidrBlock: 10.1.1.0/24
      Tags:
        - Key: usage
          Value: Bridgecrew Workshop
        - Key: createdby
          Value: Cloudformation
        - Key: type
          Value: demo-workshop
        - Key: moreinfo
          Value: workshop.bridgecrew.io
      VpcId: !Ref WorkshopVPC
  WorkshopVPCInternetGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
    DependsOn:
      - WorkshopVPC
  EC2R1ZK3C:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WorkshopVPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WorkshopVPCInternetGW
    DependsOn:
      - WorkshopVPCInternetGW
      - WorkshopVPCRouteTable
      - WorkshopVPCGatewayAttachment
  WorkshopVPCRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WorkshopVPC
    DependsOn:
      - WorkshopVPC
      - WorkshopVPCInternetGW
      - WorkshopVPCGatewayAttachment
  WorkshopVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref WorkshopVPCInternetGW
      VpcId: !Ref WorkshopVPC
    DependsOn:
      - WorkshopVPC
      - WorkshopVPCInternetGW
  WorkshopRouteTableSubnetAttachment:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WorkshopVPCRouteTable
      SubnetId: !Ref WorkshopSubnet
    DependsOn:
      - WorkshopVPCRouteTable
      - WorkshopSubnet
      - WorkshopVPCGatewayAttachment